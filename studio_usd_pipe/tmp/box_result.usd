#usda 1.0
(
    defaultPrim = "asset"
    metersPerUnit = 0.01
    upAxis = "Y"
)

def Xform "asset" (
    kind = "component"
)
{
    def Xform "world"
    {
        def Mesh "cube"
        {
            uniform bool doubleSided = 1
            float3[] extent = [(-0.5, -0.5, -0.5), (0.5, 0.5, 0.5)]
            int[] faceVertexCounts = [4, 4, 4, 4, 4, 4]
            int[] faceVertexIndices = [0, 1, 3, 2, 2, 3, 5, 4, 4, 5, 7, 6, 6, 7, 1, 0, 1, 7, 5, 3, 6, 0, 2, 4]
            rel material:binding = </asset/Looks/blinn1SG>
            point3f[] points = [(-0.5, -0.5, 0.5), (0.5, -0.5, 0.5), (-0.5, 0.5, 0.5), (0.5, 0.5, 0.5), (-0.5, 0.5, -0.5), (0.5, 0.5, -0.5), (-0.5, -0.5, -0.5), (0.5, -0.5, -0.5)]
            color3f[] primvars:displayColor = [(0.6120656, 0, 0)] (
                customData = {
                    dictionary Maya = {
                        bool generated = 1
                    }
                }
            )
            float2[] primvars:st = [(0.375, 0), (0.625, 0), (0.625, 0.25), (0.375, 0.25), (0.625, 0.5), (0.375, 0.5), (0.625, 0.75), (0.375, 0.75), (0.625, 1), (0.375, 1), (0.875, 0), (0.875, 0.25), (0.125, 0), (0.125, 0.25)] (
                interpolation = "faceVarying"
            )
            int[] primvars:st:indices = [0, 1, 2, 3, 3, 2, 4, 5, 5, 4, 6, 7, 7, 6, 8, 9, 1, 10, 11, 2, 12, 0, 3, 13]
        }
    }

    def Scope "Looks"
    {
        def Material "blinn1SG" (
            variants = {
                string shadingVariant = "red"
            }
            prepend variantSets = "shadingVariant"
        )
        {
            color3f inputs:displayColor = (0.6120656, 0, 0)
            float inputs:displayOpacity
            color3f inputs:transparency
            token outputs:ri:surface.connect = </asset/Looks/blinn1SG/blinn1SG_lambert.outputs:out>

            def Shader "blinn1SG_lambert"
            {
                uniform token info:id = "PxrDiffuse"
                color3f inputs:diffuseColor.connect = </asset/Looks/blinn1SG.inputs:displayColor>
                color3f inputs:transmissionColor.connect = </asset/Looks/blinn1SG.inputs:transparency>
                token outputs:out
            }
            variantSet "shadingVariant" = {
                "blue" {
                    color3f inputs:displayColor = (0, 0, 1)

                }
                "green" {
                    color3f inputs:displayColor = (0, 1, 0)

                }
                "red" {
                    color3f inputs:displayColor = (1, 0, 0)

                }
            }
        }
    }
}

